
version: 2
jobs:
  test:
    working_directory: ~/repo/flight-booking
    docker:
      - image: circleci/python:3.7.0
      - image: rabbitmq:latest
        environment:
          DEBUG: on
          SECRET: $SECRET

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt

      - run:
          name: Start CELERY
          command: |
          source venv/bin/activate
          celery -A app worker -l info
          background: true

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run tests
          command: |
            source venv/bin/activate
            mkdir -p test-results
            python manage.py test --xunit-file=test-results/xunittest.xml

      - run:
          name: Get Coverage
          command: |
            source venv/bin/activate
            coverage report
            coverage html -d test-results

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results
          destination: tr1

  deploy:
    machine: true
    working_directory: ~/repo/flight-booking

    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Build and deploy docker image
          command: |
            echo $HEROKU_API_KEY | docker login --username=$HEROKU_LOGIN --password-stdin registry.heroku.com
            docker build -t registry.heroku.com/$HEROKU_APP_NAME/web .
            docker push registry.heroku.com/$HEROKU_APP_NAME/web:latest
            docker inspect registry.heroku.com/$HEROKU_APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID_FILE
            export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID_FILE)
            curl -n -X PATCH https://api.heroku.com/apps/$HEROKU_APP_NAME/formation \
            -d "{ \"updates\": [ { \"type\": \"web\", \"docker_image\": \"${WEB_DOCKER_IMAGE_ID}\" }]}" -H "Content-Type: application/json" \
            -H "Accept: application/vnd.heroku+json; version=3.docker-releases" \
            -H "Authorization: Bearer $HEROKU_API_KEY"

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
